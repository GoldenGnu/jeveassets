<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>net.nikr</groupId>
	<artifactId>jeveassets</artifactId>
	<packaging>jar</packaging>
	<version>10.0.0</version>
	<name>jeveassets</name>
	<description>jEveAssets is an out-of-game asset manager for Eve-Online, written in Java</description>
	<url>http://eve.nikr.net/jeveasset</url>
	<issueManagement>
		<system>GitHub</system>
		<url>https://github.com/GoldenGnu/jeveassets/issues</url>
	</issueManagement>
	<developers>
		<developer>
			<id>niklas</id>
			<name>Niklas Kyster Rasmussen</name>
			<email>niklaskr@gmail.com</email>
			<url>http://nikr.net/</url>
			<timezone>+1</timezone>
		</developer>
		<developer>
			<id>candle</id>
			<email>jeveassets@candle.me.uk</email>
			<timezone>+1</timezone>
		</developer>
		<developer>
			<id>tryfan</id>
			<name>TryfanMan</name>
		</developer>
		<developer>
			<id>beders</id>
			<name>Jochen Bedersdorfer</name>
		</developer>
		<developer>
			<id>gavitron</id>
			<name>Ima Sohmbadi</name>
		</developer>
	</developers>
	<licenses>
		<license>
			<name>GNU General Public License 2.0</name>
			<url>http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt</url>
		</license>
	</licenses>
	<scm>
		<connection>scm:svn:http://svn.candle.me.uk/nikr/jeveassets/trunk/</connection>
		<url>http://svn.candle.me.uk/nikr/jeveassets/trunk/</url>
	</scm>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<finalName>jeveassets</finalName>
					<archive>
						<manifest>
							<mainClass>${main.class}</mainClass>
							<packageName>net.nikr.eve.jeveasset</packageName>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib</classpathPrefix>
						</manifest>
						<manifestEntries>
							<SplashScreen-Image>splash.jpg</SplashScreen-Image>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<compilerArguments>
						<Xmaxerrs>1000</Xmaxerrs>
						<Xmaxwarns>1000</Xmaxwarns>
						<Xlint:all/>
						<Xlint:-serial/>
						<Werror />
					</compilerArguments>
					<showWarnings>true</showWarnings>
					<showDeprecation>true</showDeprecation>
					<source>${project.build.sourceVersion}</source>
					<target>${project.build.sourceVersion}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<!-- copy files to build directory -->
					<execution>
						<id>process-resources</id>
						<phase>process-resources</phase>
						<configuration>
							<target>
								<mkdir dir="${project.build.directory}/data"/>
								<copy todir="${project.build.directory}/data">
									<fileset dir="data" includes="*.xml"/>
									<fileset dir="data" includes="*.dat"/>
									<fileset dir="data" includes="*.json"/>
									<fileset dir="data" includes="*.zip"/>
									<fileset dir="data" includes="*.db"/>
								</copy>
								<copy todir="${project.build.directory}">
									<fileset dir="" includes="*.txt"/>
									<fileset dir="tools" includes="jmemory.jar"/>
									<fileset dir="tools" includes="jarfile.properties"/>
								</copy>
								<copy todir="${project.build.directory}">
									<fileset dir="tools/update" includes="list.php"/>
									<fileset dir="tools/update" includes=".htaccess"/>
								</copy>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<!-- copy files to installer -->
					<execution>
						<id>copy-to-install</id>
						<phase>package</phase>
						<configuration>
							<target>
								<copy todir="${project.build.directory}/install/lib">
									<fileset dir="${project.build.directory}/lib" includes="*.jar"/>
								</copy>
								<copy todir="${project.build.directory}/install">
									<fileset dir="${project.build.directory}" includes="*.jar"/>
									<fileset dir="${project.build.directory}" includes="*.txt"/>
									<fileset dir="${project.build.directory}" includes="*.properties"/>
								</copy>
								<copy todir="${project.build.directory}/install/izpack">
									<fileset dir="tools" includes="izpack-util.jar"/>
								</copy>
								<copy todir="${project.build.directory}/install/izpack">
									<fileset dir="src/main/izpack" includes="ProcessPanel.Spec.xml"/>
								</copy>
								<copy todir="${project.build.directory}">
									<fileset dir="${project.build.directory}/classes" includes="update_version.dat"/>
								</copy>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>move-and-rename</id>
						<phase>install</phase>
						<configuration>
							<target>
								<mkdir dir="${project.build.directory}/upload"/>
								<copy file="${project.build.directory}/installer/jEveAssets-${project.version}.dmg" tofile="${project.build.directory}/upload/jeveassets.dmg" failonerror="false" />
								<copy file="${project.build.directory}/installer/jEveAssets-${project.version}.msi" tofile="${project.build.directory}/upload/jeveassets.msi" failonerror="false" />
								<copy file="${project.build.directory}/installer/jeveassets_${project.version}-1_amd64.deb" tofile="${project.build.directory}/upload/jeveassets.deb" failonerror="false" />
								<move file="${project.build.directory}/installer/jEveAssets-${project.version}.dmg" tofile="${project.build.directory}/installer/jeveassets-macos-${project.version}.dmg" failonerror="false" />
								<move file="${project.build.directory}/installer/jEveAssets-${project.version}.msi" tofile="${project.build.directory}/installer/jeveassets-windows-${project.version}.msi" failonerror="false" />
								<move file="${project.build.directory}/installer/jeveassets_${project.version}-1_amd64.deb" tofile="${project.build.directory}/installer/jeveassets-linux-${project.version}.deb" failonerror="false" />
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>copy-profiles</id>
						<phase>process-resources</phase>
						<configuration>
							<tasks>
								<taskdef resource="net/sf/antcontrib/antcontrib.properties" />
								<if>
									<available file="profiles"/>
									<then>
										<mkdir dir="${project.build.directory}/profiles"/>
										<copy todir="${project.build.directory}/profiles">
											<fileset dir="profiles" includes="*.xml"/>
										</copy>
									</then>
								</if>
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<phase>process-resources</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<delete dir="${project.build.directory}/jre" failonerror="false" includeemptydirs="true" />
								<delete dir="${project.build.directory}/installer" failonerror="false" includeemptydirs="true" />
								<delete dir="${project.build.directory}/appimage" failonerror="false" includeemptydirs="true" />
								<delete dir="${project.build.directory}/app" failonerror="false" includeemptydirs="true" />
								<delete dir="${project.build.directory}/temp-image" failonerror="false" includeemptydirs="true" />
								<delete dir="${project.build.directory}/temp-install" failonerror="false" includeemptydirs="true" />
							</tasks>
						</configuration>
					</execution>
					<!--  -->
					<execution>
						<id>copy-to-jpackager</id>
						<phase>verify</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<copy todir="${project.build.directory}/app">
									<fileset dir="${project.build.directory}" includes="jeveassets.jar"/>
									<fileset dir="${project.build.directory}" includes="jmemory.jar"/>
									<fileset dir="${project.build.directory}" includes="*.txt"/>
									<fileset dir="${project.build.directory}" includes="*.properties"/>
								</copy>
								<copy todir="${project.build.directory}/app/data">
									<fileset dir="data" includes="*.xml"/>
									<fileset dir="data" includes="*.dat"/>
								</copy>
								<copy todir="${project.build.directory}/app/lib">
									<fileset dir="${project.build.directory}/lib" includes="*.jar"/>
								</copy>
							</target>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>ant-contrib</groupId>
						<artifactId>ant-contrib</artifactId>
						<version>20020829</version>
					</dependency>
					<dependency>
						<groupId>commons-net</groupId>
						<artifactId>commons-net</artifactId>
						<version>1.4.1</version>
					</dependency>
					<dependency>
						<groupId>ant</groupId>
						<artifactId>ant-commons-net</artifactId>
						<version>1.6.5</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<excludeArtifactIds>junit,hamcrest-library</excludeArtifactIds>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
							<excludeTransitive>false</excludeTransitive>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.3</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.4.0</version>
				<executions>
					<execution>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>java</executable>
							<arguments>
								<argument>-classpath</argument>
								<classpath />
								<mainClass>${main.class}</mainClass>
								<argument>${arg1}</argument>
								<argument>${arg2}</argument>
								<argument>${edt.debug}</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<finalName>${project.name}-${project.version}</finalName>
					<appendAssemblyId>false</appendAssemblyId>
					<descriptors>
						<descriptor>src/main/assembly/assembly.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id> <!-- this is used for inheritance merges -->
						<phase>package</phase> <!-- append to the packaging phase. -->
						<goals>
							<goal>single</goal> <!-- goals == mojos -->
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>net.ju-n.maven.plugins</groupId>
				<artifactId>checksum-maven-plugin</artifactId>
				<version>1.4</version>
				<executions>
					<execution>
						<goals>
							<goal>files</goal>
						</goals>
						<phase>verify</phase>
					</execution>
				</executions>
				<configuration>
					<fileSets>
						<fileSet>
							<directory>${project.build.directory}</directory>
							<includes>
								<include>*.txt</include>
								<include>*.jar</include>
								<include>*.properties</include>
								<include>lib/*.jar</include>
							</includes>
						</fileSet>
					</fileSets>
					<algorithms>
						<algorithm>MD5</algorithm>
					</algorithms>
					<csvSummary>false</csvSummary>
					<individualFiles>true</individualFiles>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>wagon-maven-plugin</artifactId>
				<version>2.0.2</version>
				<executions>
					<execution>
						<id>upload-update</id>
						<phase>deploy</phase>
						<goals>
							<goal>upload</goal>
						</goals>
						<configuration>
							<fromDir>${project.build.directory}</fromDir>
							<includes>*.txt,*.jar,*.md5,lib/*,*.dat,*.php,*.properties,.htaccess</includes>
							<serverId>eve-nikr-net</serverId>
							<url>sftp://${upload.url}</url>
							<toDir>${upload.program.file}</toDir>
						</configuration>
					</execution>
					<execution>
						<id>upload-zip</id>
						<phase>deploy</phase>
						<goals>
							<goal>upload</goal>
						</goals>
						<configuration>
							<fromDir>${project.build.directory}</fromDir>
							<includes>*.zip</includes>
							<serverId>eve-nikr-net</serverId>
							<url>sftp://${upload.url}</url>
							<toDir>${upload.zip}</toDir>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.1</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<!-- Used to configure IzPack installer -->
			<plugin>
				<groupId>org.codehaus.izpack</groupId>
				<artifactId>izpack-maven-plugin</artifactId>
				<version>5.0.3</version>
				<executions>
					<execution>
						<id>izpack</id>
						<phase>package</phase>
						<goals>
							<goal>izpack</goal>
						</goals>
						<configuration>
							<autoIncludeDevelopers>true</autoIncludeDevelopers>
							<finalName>installer</finalName>
							<baseDir>${project.build.directory}/install</baseDir>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.2</version>
				<configuration>
					<excludes>
						<exclude>${tests.to.skip}</exclude>
					</excludes>
					<environmentVariables>
                        <JANICE_API_KEY>${janice}</JANICE_API_KEY>
                    </environmentVariables>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.8</version>
				<configuration>
					<outputDirectory>${project.build.directory}/jacoco</outputDirectory>
				</configuration>
				<executions>
					<execution>
						<id>jacoco-initialize</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-report</id>
						<phase>package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<extensions>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ssh</artifactId>
				<version>3.5.3</version>
			</extension>
			<!-- Enabling the use of FTP -->
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ftp</artifactId>
				<version>3.5.3</version>
			</extension>
		</extensions>
		<resources>
			<resource>
				<directory>src/main/izpack</directory>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/update_version.dat</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
				<excludes>
					<exclude>**/update_version.dat</exclude>
				</excludes>
			</resource>
		</resources>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.8.1</version>
				<configuration>
					<quiet>true</quiet>
					<failOnError>false</failOnError>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.3</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<dependencyDetailsEnabled>false</dependencyDetailsEnabled>
					<dependencyLocationsEnabled>false</dependencyLocationsEnabled>
				</configuration>
				<reportSets>
					<reportSet>
						<reports>
							<report>index</report>
							<!--<report>cim</report>-->
							<report>dependencies</report>
							<report>dependency-convergence</report>
							<!--<report>distribution-management</report>-->
							<report>issue-tracking</report>
							<report>license</report>
							<!--<report>mailing-list</report>-->
							<report>modules</report>
							<report>plugin-management</report>
							<report>plugins</report>
							<report>project-team</report>
							<report>scm</report>
							<report>summary</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.12</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.9.1</version>
				<configuration>
					<configLocation>${basedir}/checkstyle.xml</configLocation>
				</configuration>
				<reportSets>
					<reportSet>
						<reports>
							<report>checkstyle</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>taglist-maven-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<tagListOptions>
						<tagClasses>
							<tagClass>
								<displayName>Important Todo Work</displayName>
								<tags>
									<tag>
										<matchString>fixme</matchString>
										<matchType>ignoreCase</matchType>
									</tag>
								</tags>
							</tagClass>
							<tagClass>
								<displayName>Todo Work</displayName>
								<tags>
									<tag>
										<matchString>todo</matchString>
										<matchType>ignoreCase</matchType>
									</tag>
									<tag>
										<matchString>pending</matchString>
										<matchType>ignoreCase</matchType>
									</tag>
								</tags>
							</tagClass>
							<tagClass>
								<displayName>Workarounds and other none optimal code</displayName>
								<tags>
									<tag>
										<matchString>xxx</matchString>
										<matchType>ignoreCase</matchType>
									</tag>
								</tags>
							</tagClass>
						</tagClasses>
					</tagListOptions>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>3.0.5</version>
				<configuration>
					<quiet>true</quiet>
					<findbugsXmlOutput>true</findbugsXmlOutput>
					<findbugsXmlOutputDirectory>target/site</findbugsXmlOutputDirectory>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>3.8</version>
				<configuration>
					<linkXref>true</linkXref>
					<sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
					<minimumTokens>100</minimumTokens>
					<targetJdk>${project.build.sourceVersion}</targetJdk>
					<excludes>
						<exclude>**/*Bean.java</exclude>
						<exclude>**/generated/*.java</exclude>
					</excludes>
					<excludeRoots>
						<excludeRoot>target/generated-sources/stubs</excludeRoot>
					</excludeRoots>
				</configuration>
			</plugin>
		</plugins>
	</reporting>

	<profiles>
		<profile>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<tests.to.skip>NOTHING</tests.to.skip>
			</properties>
		</profile>
		<!-- RUN -->
		<profile>
			<id>RUN-portable</id>
			<properties>
				<arg1>-portable</arg1>
			</properties>
		</profile>
		<profile>
			<id>RUN-debug</id>
			<properties>
				<arg1>-debug</arg1>
			</properties>
		</profile>
		<profile>
			<id>RUN-edtdebug</id>
		</profile>
		<profile>
			<id>RUN-lazysave</id>
			<properties>
				<arg1>-lazysave</arg1>
			</properties>
		</profile>
		<profile>
			<id>RUN-no-args-profiling</id>
			<properties>
				<edt.debug></edt.debug>
			</properties>
		</profile>
		<profile>
			<id>RUN-forceupdate</id>
			<properties>
				<arg1>-debug</arg1>
				<arg2>-forceupdate</arg2>
			</properties>
		</profile>
		<profile>
			<id>RUN-noupdate</id>
			<properties>
				<arg1>-debug</arg1>
				<arg2>-noupdate</arg2>
			</properties>
		</profile>
		<profile>
			<id>RUNCLI-update</id>
			<properties>
				<arg1>-update</arg1>
				<arg2>-portable</arg2>
			</properties>
		</profile>
		<profile>
			<id>RUNCLI-export</id>
			<properties>
				<arg1>-export</arg1>
				<arg2>-portable</arg2>
			</properties>
		</profile>
		<profile>
			<id>RUNCLI-help</id>
			<properties>
				<arg1>-help</arg1>
			</properties>
		</profile>
		<!-- TESTS -->
		<profile>
			<id>skip-online-tests</id>
			<activation>
				<property>
					<name>skip-online-tests</name>
					<value>true</value>
				</property>
			</activation>
			<properties>
				<tests.to.skip>**/*OnlineTest.java</tests.to.skip>
			</properties>
		</profile>
		<profile>
			<id>skip-online-price-tests</id>
			<activation>
				<property>
					<name>skip-online-price-tests</name>
					<value>true</value>
				</property>
			</activation>
			<properties>
				<tests.to.skip>**/*PriceDataGetterOnlineTest.java</tests.to.skip>
			</properties>
		</profile>
		<!-- JDK support -->
		<profile>
			<id>jdk11</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<jdk>11</jdk>
			</activation>
			<properties>
				<project.build.sourceVersion>11</project.build.sourceVersion>
			</properties>
		</profile>
		<profile>
			<id>jdk17</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<jdk>17</jdk>
			</activation>
			<properties>
				<project.build.sourceVersion>17</project.build.sourceVersion>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.izpack</groupId>
						<artifactId>izpack-maven-plugin</artifactId>
						<version>5.0.3</version>
						<executions>
							<execution>
								<id>izpack</id>
								<phase>none</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- jPackager -->
		<profile>
			<id>jpackager-windows</id>
			<activation>
				<os>
					<family>windows</family>
				</os>
			</activation>
			<properties>
				<project.build.jpackage.appimage.name>windows</project.build.jpackage.appimage.name>
				<project.build.jpackage.installer.type>msi</project.build.jpackage.installer.type>
				<project.build.jpackage.installer.icon>install-resources/jEveAssets.ico</project.build.jpackage.installer.icon>
				<project.build.jpackage.installer.image>${project.build.directory}/appimage/jEveAssets</project.build.jpackage.installer.image>
				<project.build.jpackage.installer.options-1>--win-dir-chooser</project.build.jpackage.installer.options-1>
				<project.build.jpackage.installer.options-2>--win-menu</project.build.jpackage.installer.options-2>
			</properties>
		</profile>
		<profile>
			<id>jpackager-mac</id>
			<activation>
				<os>
					<family>mac</family>
				</os>
			</activation>
			<properties>
				<project.build.jpackage.appimage.name>macos</project.build.jpackage.appimage.name>
				<project.build.jpackage.installer.type>dmg</project.build.jpackage.installer.type>
				<project.build.jpackage.installer.icon>install-resources/jEveAssets.png</project.build.jpackage.installer.icon>
				<project.build.jpackage.installer.image>${project.build.directory}/appimage/jEveAssets.app</project.build.jpackage.installer.image>
			</properties>
		</profile>
		<profile>
			<id>jpackager-unix</id>
			<activation>
				<os>
					<family>unix</family>
					<name>Linux</name>
				</os>
			</activation>
			<properties>
				<project.build.jpackage.appimage.name>linux</project.build.jpackage.appimage.name>
				<project.build.jpackage.installer.type>deb</project.build.jpackage.installer.type>
				<project.build.jpackage.installer.icon>install-resources/jEveAssets.png</project.build.jpackage.installer.icon>
				<project.build.jpackage.installer.image>${project.build.directory}/appimage/jEveAssets</project.build.jpackage.installer.image>
				<project.build.jpackage.installer.options-1>--linux-package-name</project.build.jpackage.installer.options-1>
				<project.build.jpackage.installer.options-2>jeveassets</project.build.jpackage.installer.options-2>
				<project.build.jpackage.installer.options-3>--linux-shortcut</project.build.jpackage.installer.options-3>
			</properties>
		</profile>
		<profile>
			<id>jpackager-java8</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>2.4</version>
						<configuration>
							<finalName>${project.name}-java8-${project.version}</finalName>
							<appendAssemblyId>false</appendAssemblyId>
							<descriptors>
								<descriptor>src/main/assembly/assembly.xml</descriptor>
							</descriptors>
						</configuration>
						<executions>
							<execution>
								<id>make-assembly</id> <!-- this is used for inheritance merges -->
								<phase>package</phase> <!-- append to the packaging phase. -->
								<goals>
									<goal>single</goal> <!-- goals == mojos -->
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.7</version>
						<executions>
							<execution>
								<id>package-6-move-java</id>
								<phase>verify</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<copy todir="${project.build.directory}/installer">
											<fileset dir="${project.build.directory}" includes="jeveassets-*.zip"/>
										</copy>
										<copy todir="${project.build.directory}/upload">
											<fileset dir="${project.build.directory}" includes="*.dat"/>
											<fileset dir="${project.build.directory}" includes="list.php"/>
											<fileset dir="${project.build.directory}" includes=".htaccess"/>
										</copy>
									</target>
								</configuration>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>ant-contrib</groupId>
								<artifactId>ant-contrib</artifactId>
								<version>20020829</version>
							</dependency>
							<dependency>
								<groupId>commons-net</groupId>
								<artifactId>commons-net</artifactId>
								<version>1.4.1</version>
							</dependency>
							<dependency>
								<groupId>ant</groupId>
								<artifactId>ant-commons-net</artifactId>
								<version>1.6.5</version>
							</dependency>
						</dependencies>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>wagon-maven-plugin</artifactId>
						<version>2.0.2</version>
						<executions>
							<execution>
								<id>upload-update</id>
								<phase>deploy</phase>
								<configuration>
									<skip>true</skip>
								</configuration>
							</execution>
							<execution>
								<id>upload-zip</id>
								<phase>deploy</phase>
								<configuration>
									<skip>true</skip>
								</configuration>
							</execution>
							<execution>
								<id>upload-java8-delete</id>
								<phase>deploy</phase>
								<goals>
									<goal>sshexec</goal>
								</goals>
								<configuration>
									<displayCommandOutputs>true</displayCommandOutputs>
									<serverId>eve-nikr-net</serverId>
									<url>${upload.url}</url>
									<commands> 
										<!-- remove data directory -->
										<command>rm -rf ${upload.program.delete}</command>
									</commands>
								</configuration>
							</execution>
							<execution>
								<id>upload-java8-update</id>
								<phase>deploy</phase>
								<goals>
									<goal>upload</goal>
								</goals>
								<configuration>
									<fromDir>${project.build.directory}/upload</fromDir>
									<includes>*.${project.build.jpackage.installer.type},*.dat,*.md5,*.php,.htaccess</includes>
									<serverId>eve-nikr-net</serverId>
									<url>sftp://${upload.url}</url>
									<toDir>${upload.program.file}</toDir>
								</configuration>
							</execution>
							<execution>
								<id>upload-java8-zip</id>
								<phase>deploy</phase>
								<goals>
									<goal>upload</goal>
								</goals>
								<configuration>
									<fromDir>${project.build.directory}/installer</fromDir>
									<includes>*.*</includes>
									<serverId>eve-nikr-net</serverId>
									<url>sftp://${upload.url}</url>
									<toDir>${upload.program.file}</toDir>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>jpackager-deploy</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.izpack</groupId>
						<artifactId>izpack-maven-plugin</artifactId>
						<version>5.0.3</version>
						<executions>
							<execution>
								<id>izpack</id>
								<phase>none</phase>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>3.0.0</version>
						<executions>
							<!-- jlink: JRE -->
							<execution>
								<id>package-1-jlink</id>
								<phase>verify</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<!--<longModulepath>false</longModulepath>-->
									<executable>${java.home}/bin/jlink</executable>
									<arguments>
										<argument>--output</argument>
										<argument>${project.build.directory}/jre</argument>
										<argument>--module-path</argument>
										<argument>${java.home}/jmods</argument>
										<argument>--add-modules</argument>
										<argument>java.base,java.desktop,java.logging,java.management,java.sql,java.naming</argument>
									</arguments>
								</configuration>
							</execution>
							<!-- jPackager: AppImage -->
							<execution>
								<id>package-2-image</id>
								<phase>verify</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${java.home}/bin/jpackage</executable>
									<arguments>
										<!--Type -->
										<argument>--type</argument>
										<argument>app-image</argument>
										<!-- Image Options -->
										<argument>--runtime-image</argument>
										<argument>${project.build.directory}/jre</argument>
										<argument>--input</argument>
										<argument>${project.build.directory}/app</argument>
										<argument>--dest</argument>
										<argument>${project.build.directory}/appimage</argument>
										<argument>--main-jar</argument>
										<argument>jeveassets.jar</argument>
										<argument>--main-class</argument>
										<argument>net.nikr.eve.jeveasset.Main</argument>
										<argument>--icon</argument>
										<argument>${project.build.jpackage.installer.icon}</argument>
										<!-- Generic Options -->
										<argument>--verbose</argument>
										<argument>--name</argument>
										<argument>jEveAssets</argument>
										<argument>--app-version</argument>
										<argument>${project.version}</argument>
										<argument>--copyright</argument>  
										<argument>Copyright 2009-2024 Contributors (see credits.txt)</argument>
										<argument>--description</argument>  
										<argument>jEveAssets is an out-of-game asset manager for Eve-Online</argument>
									</arguments>
								</configuration>
							</execution>
							<!-- jPackager: Installer -->
							<execution>
								<id>package-3-installer</id>
								<phase>verify</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${java.home}/bin/jpackage</executable>
									<arguments>
										<!--Type -->
										<argument>--type</argument>
										<argument>${project.build.jpackage.installer.type}</argument>
										<!-- Installer Options -->
										<argument>${project.build.jpackage.installer.options-1}</argument>
										<argument>${project.build.jpackage.installer.options-2}</argument>
										<argument>${project.build.jpackage.installer.options-3}</argument>
										<argument>${project.build.jpackage.installer.options-4}</argument>
										<argument>--license-file</argument>
										<argument>license.txt</argument>
										<argument>--app-image</argument>
										<argument>${project.build.jpackage.installer.image}</argument>
										<argument>--dest</argument>
										<argument>${project.build.directory}/installer</argument>
										<argument>--temp</argument>  
										<argument>${project.build.directory}/temp-install</argument>
										<argument>--resource-dir</argument>
										<argument>install-resources</argument>
										<!-- Generic Options -->
										<argument>--verbose</argument>
										<argument>--name</argument>
										<argument>jEveAssets</argument>
										<argument>--app-version</argument>
										<argument>${project.version}</argument>
										<argument>--copyright</argument>  
										<argument>Copyright 2009-2019 Contributors (see credits.txt)</argument>
										<argument>--description</argument>  
										<argument>jEveAssets is an out-of-game asset manager for Eve-Online</argument>
									</arguments>
									<workingDirectory>${project.basedir}</workingDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>net.ju-n.maven.plugins</groupId>
						<artifactId>checksum-maven-plugin</artifactId>
						<version>1.4</version>
						<executions>
							<execution>
								<goals>
									<goal>files</goal>
								</goals>
								<phase>install</phase>
							</execution>
						</executions>
						<configuration>
							<fileSets>
								<fileSet>
									<directory>${project.build.directory}/upload</directory>
									<directory>${project.build.directory}/installer</directory>
									<includes>
										<include>*.*</include>
									</includes>
								</fileSet>
							</fileSets>
							<algorithms>
								<algorithm>MD5</algorithm>
							</algorithms>
							<csvSummary>false</csvSummary>
							<individualFiles>true</individualFiles>
						</configuration>
					</plugin>
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>2.4</version>
						<executions>
							<execution>
								<id>package-4-zip-appimage</id>
								<phase>verify</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<finalName>${project.name}-${project.build.jpackage.appimage.name}-${project.version}</finalName>
									<appendAssemblyId>false</appendAssemblyId>
									<descriptors>
										<descriptor>src/main/assembly/appimage.xml</descriptor>
									</descriptors>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.7</version>
						<executions>
							<execution>
								<id>package-5-move-appimage</id>
								<phase>install</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<copy todir="${project.build.directory}/installer">
											<fileset dir="${project.build.directory}" includes="${project.name}-${project.build.jpackage.appimage.name}-${project.version}.zip"/>
										</copy>
									</target>
								</configuration>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>ant-contrib</groupId>
								<artifactId>ant-contrib</artifactId>
								<version>20020829</version>
							</dependency>
							<dependency>
								<groupId>commons-net</groupId>
								<artifactId>commons-net</artifactId>
								<version>1.4.1</version>
							</dependency>
							<dependency>
								<groupId>ant</groupId>
								<artifactId>ant-commons-net</artifactId>
								<version>1.6.5</version>
							</dependency>
						</dependencies>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>wagon-maven-plugin</artifactId>
						<version>2.0.2</version>
						<executions>
							<execution>
								<id>upload-update</id>
								<phase>deploy</phase>
								<goals>
									<goal>upload</goal>
								</goals>
								<configuration>
									<fromDir>${project.build.directory}/upload</fromDir>
									<includes>*.${project.build.jpackage.installer.type},*.dat,*.md5,*.php,.htaccess</includes>
									<serverId>eve-nikr-net</serverId>
									<url>sftp://${upload.url}</url>
									<toDir>${upload.program.file}</toDir>
								</configuration>
							</execution>
							<execution>
								<id>upload-zip</id>
								<phase>deploy</phase>
								<goals>
									<goal>upload</goal>
								</goals>
								<configuration>
									<fromDir>${project.build.directory}/installer</fromDir>
									<includes>*.*</includes>
									<serverId>eve-nikr-net</serverId>
									<url>sftp://${upload.url}</url>
									<toDir>${upload.program.file}</toDir>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<repositories>
		<repository>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<id>central</id>
			<name>Maven Central</name>
			<url>https://repo.maven.apache.org/maven2/</url>
		</repository>
		<repository>
			<id>maven.nikr.net</id>
			<name>maven.nikr.net</name>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<url>https://maven.nikr.net/</url>
		</repository>
		<repository>
			<id>jitpack.io</id>
			<url>https://jitpack.io</url>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>net.troja.eve</groupId>
			<artifactId>eve-esi</artifactId>
			<version>4.8.1</version>
		</dependency>
		<dependency>
			<groupId>uk.me.candle</groupId>
			<artifactId>pricing</artifactId>
			<version>3.0.0</version>
		</dependency>
		<dependency>
			<groupId>uk.me.candle</groupId>
			<artifactId>routing</artifactId>
			<version>2.0.0</version>
		</dependency>
		<dependency>
			<groupId>uk.me.candle</groupId>
			<artifactId>translations</artifactId>
			<version>3.1.1</version>
		</dependency>
		<dependency>
			<groupId>com.glazedlists</groupId>
			<artifactId>glazedlists</artifactId>
			<version>1.11.0</version>
		</dependency>
		<dependency>
			<groupId>net.sf.supercsv</groupId>
			<artifactId>super-csv</artifactId>
			<version>2.4.0</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-library</artifactId>
			<version>2.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<!-- slf4j http://www.slf4j.org/news.html -->
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.36</version>
		</dependency>
		<dependency>
			<!-- log4j to slf4j API -->
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
			<version>1.7.36</version>
		</dependency>
		<dependency>
			<!-- commons-logging to slf4j API -->
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>1.7.36</version>
		</dependency>
		<dependency>
			<!-- java.util.logging to the slf4j API -->
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
			<version>1.7.36</version>
		</dependency>
		<dependency>
			<!-- use logback for logging -->
			<!-- http://logback.qos.ch/news.html -->
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.2.11</version>
		</dependency>
		 <dependency>
			 <!-- use logback for logging -->
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>1.2.11</version>
		</dependency>
		<dependency>
			<!-- https://github.com/jfree/jfreechart/releases -->
			<groupId>org.jfree</groupId>
			<artifactId>jfreechart</artifactId>
			<version>1.5.3</version>
		</dependency>
		<dependency>
			<!-- https://github.com/LGoodDatePicker/LGoodDatePicker/releases -->
			<groupId>com.github.lgooddatepicker</groupId>
			<artifactId>LGoodDatePicker</artifactId>
			<version>11.2.1</version>
		</dependency>
		<dependency>
			<!-- https://github.com/xerial/sqlite-jdbc/releases -->
			<groupId>org.xerial</groupId>
			<artifactId>sqlite-jdbc</artifactId>
			<version>3.36.0.3</version>
		</dependency>
		<dependency>
			<!-- https://github.com/remkop/picocli/releases -->
			<groupId>info.picocli</groupId>
			<artifactId>picocli</artifactId>
			<version>4.6.2</version>
		</dependency>
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>2.3.1</version>
		</dependency>
		<dependency>
			<groupId>org.dom4j</groupId>
			<artifactId>dom4j</artifactId>
			<version>2.1.3</version>
		</dependency>
		<dependency>
			<groupId>jaxen</groupId>
			<artifactId>jaxen</artifactId>
			<version>1.2.0</version>
		</dependency>
		<dependency>
			<!-- https://github.com/java-native-access/jna/blob/master/CHANGES.md -->
			<groupId>net.java.dev.jna</groupId>
			<artifactId>jna-platform</artifactId>
			<version>5.6.0</version>
		</dependency>
		<dependency>
			<!-- https://github.com/JFormDesigner/FlatLaf/blob/master/CHANGELOG.md -->
			<groupId>com.formdev</groupId>
			<artifactId>flatlaf</artifactId>
			<version>3.4.1</version>
		</dependency>
		<dependency>
			<!-- https://github.com/JFormDesigner/FlatLaf/blob/master/CHANGELOG.md -->
			<groupId>com.formdev</groupId>
			<artifactId>flatlaf-extras</artifactId>
			<version>3.4.1</version>
		</dependency>
		<dependency>
			<!-- https://github.com/uklimaschewski/EvalEx/releases -->
			<groupId>com.udojava</groupId>
			<artifactId>EvalEx</artifactId>
			<version>2.7</version>
		</dependency>
		<dependency>
			<groupId>com.github.umjammer</groupId>
			<artifactId>jlayer</artifactId>
			<version>1.0.2</version>
		</dependency>
	</dependencies>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.build.sourceVersion>1.8</project.build.sourceVersion>
		<targetJdk>1.8</targetJdk>
		<main.class>net.nikr.eve.jeveasset.Main</main.class>
		<arg1></arg1>
		<arg2></arg2>
		<!-- always do EDT debug when doing devlopment! -->
		<edt.debug>-edtdebug</edt.debug>
	</properties>
</project>
