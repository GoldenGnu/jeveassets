<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>net.nikr</groupId>
	<artifactId>jeveassets</artifactId>
	<packaging>jar</packaging>
	<version>3.2.0-SNAPSHOT</version>
	<name>jeveassets</name>
	<description>jEveAssets is an out-of-game asset manager for Eve-Online, written in Java</description>
	<url>http://eve.nikr.net/jeveasset</url>
	<issueManagement>
		<system>GitHub</system>
		<url>https://github.com/GoldenGnu/jeveassets/issues</url>
	</issueManagement>
	<developers>
		<developer>
			<id>niklas</id>
			<name>Niklas Kyster Rasmussen</name>
			<email>niklaskr@gmail.com</email>
			<url>http://nikr.net/</url>
			<timezone>+1</timezone>
		</developer>
		<developer>
			<id>candle</id>
			<email>jeveassets@candle.me.uk</email>
			<timezone>+1</timezone>
		</developer>
		<developer>
			<id>tryfan</id>
			<name>TryfanMan</name>
		</developer>
		<developer>
			<id>beders</id>
			<name>Jochen Bedersdorfer</name>
		</developer>
		<developer>
			<id>gavitron</id>
			<name>Ima Sohmbadi</name>
		</developer>
	</developers>
	<licenses>
		<license>
			<name>GNU General Public License 2.0</name>
			<url>http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt</url>
		</license>
	</licenses>
	<scm>
		<connection>scm:svn:http://svn.candle.me.uk/nikr/jeveassets/trunk/</connection>
		<url>http://svn.candle.me.uk/nikr/jeveassets/trunk/</url>
	</scm>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<finalName>jeveassets</finalName>
					<archive>
						<manifest>
							<mainClass>net.nikr.eve.jeveasset.Main</mainClass>
							<packageName>net.nikr.eve.jeveasset</packageName>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib</classpathPrefix>
						</manifest>
						<manifestEntries>
							<SplashScreen-Image>splash.jpg</SplashScreen-Image>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<compilerArguments>
						<Xmaxerrs>1000</Xmaxerrs>
						<Xmaxwarns>1000</Xmaxwarns>
						<Xlint:all/>
						<Xlint:-serial/>
					</compilerArguments>
					<showWarnings>true</showWarnings>
					<showDeprecation>true</showDeprecation>
					<source>${project.build.sourceVersion}</source>
					<target>${project.build.sourceVersion}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
					<resources>
						<resource>
							<directory>src/main/izpack</directory>
							<filtering>true</filtering>
						</resource>
					</resources>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<!-- copy files to build directory -->
					<execution>
						<id>process-resources</id>
						<phase>process-resources</phase>
						<configuration>
							<target>
								<mkdir dir="${project.build.directory}/data"/>
								<copy todir="${project.build.directory}/data">
									<fileset dir="data" includes="*.xml"/>
									<fileset dir="data" includes="*.dat"/>
								</copy>
								<copy todir="${project.build.directory}">
									<fileset dir="" includes="*.txt"/>
									<fileset dir="tools" includes="jmemory.jar"/>
									<fileset dir="tools" includes="jmemory.properties"/>
								</copy>
								<copy todir="${project.build.directory}">
									<fileset dir="${project.build.directory}/classes" includes="update_version.dat"/>
								</copy>
								<copy todir="${project.build.directory}">
									<fileset dir="tools/update" includes="list.php"/>
								</copy>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<!-- copy files to installer -->
					<execution>
						<id>copy-to-install</id>
						<phase>package</phase>
						<configuration>
							<target>
								<copy todir="${project.build.directory}/install/lib">
									<fileset dir="${project.build.directory}/lib" includes="*.jar"/>
								</copy>
								<copy todir="${project.build.directory}/install">
									<fileset dir="${project.build.directory}" includes="*.jar"/>
									<fileset dir="${project.build.directory}" includes="*.txt"/>
									<fileset dir="${project.build.directory}" includes="*jmemory.properties"/>
								</copy>
								<copy todir="${project.build.directory}/install/izpack">
									<fileset dir="tools" includes="izpack-util.jar"/>
								</copy>
								<copy todir="${project.build.directory}/install/izpack">
									<fileset dir="src/main/izpack" includes="ProcessPanel.Spec.xml"/>
								</copy>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<!-- Delete old release -->
					<execution>
						<id>clear-old-release</id>
						<phase>deploy</phase>
						<configuration>
							<target>
								<ftp action="delete"
									 server="ftp.nikr.net"
									 userid="${ftp.user}"
									 password="${ftp.pass}"
									 remotedir="eve.nikr.net/jeveassets/update" >
									<fileset>
										<include name="program/**"/>
									</fileset>
								</ftp>
								<ftp action="rmdir"
									 server="ftp.nikr.net"
									 userid="${ftp.user}"
									 password="${ftp.pass}"
									 remotedir="eve.nikr.net/jeveassets/update" >
									<fileset>
										<include name="program/**"/>
									</fileset>
								</ftp>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>commons-net</groupId>
						<artifactId>commons-net</artifactId>
						<version>1.4.1</version>
					</dependency>
					<dependency>
						<groupId>ant</groupId>
						<artifactId>ant-commons-net</artifactId>
						<version>1.6.5</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<excludeArtifactIds>junit,logkit,servlet-api,avalon-framework,icu4j,jdom,xalan,xercesImpl,xml-apis,xmlParserAPIs,xom,commons-logging</excludeArtifactIds>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
							<excludeTransitive>false</excludeTransitive>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.1</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.2.1</version>
				<executions>
					<execution>
						<goals>
							<goal>exec</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<executable>java</executable>
					<arguments>
						<argument>-classpath</argument>
						<classpath/>
						<argument>net.nikr.eve.jeveasset.Main</argument>
						<argument>${arg1}</argument>
						<argument>${arg2}</argument>
					</arguments>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<finalName>${project.name}-${project.version}</finalName>
					<appendAssemblyId>false</appendAssemblyId>
					<descriptors>
						<descriptor>src/main/assembly/assembly.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id> <!-- this is used for inheritance merges -->
						<phase>package</phase> <!-- append to the packaging phase. -->
						<goals>
							<goal>single</goal> <!-- goals == mojos -->
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>net.ju-n.maven.plugins</groupId>
				<artifactId>checksum-maven-plugin</artifactId>
				<version>1.2</version>
				<executions>
					<execution>
						<goals>
							<goal>files</goal>
						</goals>
						<phase>verify</phase>
					</execution>
				</executions>
				<configuration>
					<fileSets>
						<fileSet>
							<directory>${project.build.directory}</directory>
							<includes>
								<include>*.txt</include>
								<include>*.jar</include>
								<include>*.properties</include>
								<include>lib/*.jar</include>
							</includes>
						</fileSet>
					</fileSets>
					<algorithms>
						<algorithm>MD5</algorithm>
					</algorithms>
					<csvSummary>false</csvSummary>
					<individualFiles>true</individualFiles>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>wagon-maven-plugin</artifactId>
				<version>1.0-beta-5</version>
				<executions>
					<execution>
						<id>upload-update</id>
						<phase>deploy</phase>
						<goals>
							<goal>upload</goal>
						</goals>
						<configuration>
							<fromDir>${project.build.directory}</fromDir>
							<includes>*.txt,*.jar,*.md5,lib/*,*.dat,*.php,*.properties</includes>
							<serverId>eve-nikr-net</serverId>
							<url>ftp://ftp.nikr.net</url>
							<toDir>eve.nikr.net/jeveassets/update/program</toDir>
						</configuration>
					</execution>
					<execution>
						<id>upload-zip</id>
						<phase>deploy</phase>
						<goals>
							<goal>upload</goal>
						</goals>
						<configuration>
							<fromDir>${project.build.directory}</fromDir>
							<includes>*.zip</includes>
							<serverId>eve-nikr-net</serverId>
							<url>ftp://ftp.nikr.net</url>
							<toDir>eve.nikr.net/jeveassets</toDir>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.1</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<!-- Used to configure IzPack installer -->
			<plugin>
				<groupId>org.codehaus.izpack</groupId>
				<artifactId>izpack-maven-plugin</artifactId>
				<version>5.0.3</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>izpack</goal>
						</goals>
						<configuration>
							<autoIncludeDevelopers>true</autoIncludeDevelopers>
							<finalName>installer</finalName>
							<baseDir>${project.build.directory}/install</baseDir>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.12</version>
                <configuration>
                    <excludes>
                        <exclude>${tests.to.skip}</exclude>
                    </excludes>
                </configuration>
            </plugin>
		</plugins>
		<extensions>
			<!-- Enabling the use of FTP -->
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ftp</artifactId>
				<version>2.6</version>
			</extension>
		</extensions>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/update_version.dat</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
				<excludes>
					<exclude>**/update_version.dat</exclude>
				</excludes>
			</resource>
		</resources>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.8.1</version>
				<configuration>
					<quiet>true</quiet>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.3</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<dependencyDetailsEnabled>false</dependencyDetailsEnabled>
					<dependencyLocationsEnabled>false</dependencyLocationsEnabled>
				</configuration>
				<reportSets>
					<reportSet>
						<reports>
							<report>index</report>
							<!--<report>cim</report>-->
							<report>dependencies</report>
							<report>dependency-convergence</report>
							<!--<report>distribution-management</report>-->
							<report>issue-tracking</report>
							<report>license</report>
							<!--<report>mailing-list</report>-->
							<report>modules</report>
							<report>plugin-management</report>
							<report>plugins</report>
							<report>project-team</report>
							<report>scm</report>
							<report>summary</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.12</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.9.1</version>
				<configuration>
					<configLocation>${basedir}/checkstyle.xml</configLocation>
				</configuration>
				<reportSets>
					<reportSet>
						<reports>
							<report>checkstyle</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>taglist-maven-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<tagListOptions>
						<tagClasses>
							<tagClass>
								<displayName>Important Todo Work</displayName>
								<tags>
									<tag>
										<matchString>fixme</matchString>
										<matchType>ignoreCase</matchType>
									</tag>
								</tags>
							</tagClass>
							<tagClass>
								<displayName>Todo Work</displayName>
								<tags>
									<tag>
										<matchString>todo</matchString>
										<matchType>ignoreCase</matchType>
									</tag>
									<tag>
										<matchString>pending</matchString>
										<matchType>ignoreCase</matchType>
									</tag>
								</tags>
							</tagClass>
							<tagClass>
								<displayName>Workarounds and other none optimal code</displayName>
								<tags>
									<tag>
										<matchString>xxx</matchString>
										<matchType>ignoreCase</matchType>
									</tag>
								</tags>
							</tagClass>
						</tagClasses>
					</tagListOptions>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>2.4.0</version>
				<configuration>
					<quiet>true</quiet>
					<findbugsXmlOutput>true</findbugsXmlOutput>
					<findbugsXmlOutputDirectory>target/site</findbugsXmlOutputDirectory>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>2.7.1</version>
				<configuration>
					<linkXref>true</linkXref>
					<sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
					<minimumTokens>100</minimumTokens>
					<targetJdk>${project.build.sourceVersion}</targetJdk>
					<excludes>
						<exclude>**/*Bean.java</exclude>
						<exclude>**/generated/*.java</exclude>
					</excludes>
					<excludeRoots>
						<excludeRoot>target/generated-sources/stubs</excludeRoot>
					</excludeRoots>
				</configuration>
			</plugin>
		</plugins>
	</reporting>

	<profiles>
		<profile>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
				<tests.to.skip>NOTHING</tests.to.skip>
            </properties>
		</profile>
		<profile>
            <id>skip-online-tests</id>
            <activation>
                <property>
                    <name>skip-online-tests</name>
                    <value>true</value>
                </property>
            </activation>
            <properties>
				<tests.to.skip>**/*OnlineTest.java</tests.to.skip>
            </properties>
		</profile>
		<profile>
			<id>portable</id>
			<properties>
				<arg1>-portable</arg1>
			</properties>
		</profile>
		<profile>
			<id>debug</id>
			<properties>
				<arg1>-debug</arg1>
			</properties>
		</profile>
		<profile>
			<id>update</id>
			<properties>
				<arg1>-debug</arg1>
				<arg2>-update</arg2>
			</properties>
		</profile>
		<profile>
			<id>noupdate</id>
			<properties>
				<arg1>-debug</arg1>
				<arg2>-noupdate</arg2>
			</properties>
		</profile>
	</profiles>

	<repositories>
		<repository>
			<id>maven.nikr.net</id>
			<name>maven.nikr.net</name>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<url>http://maven.nikr.net/</url>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>com.beimin</groupId>
			<artifactId>eveapi</artifactId>
			<version>7.0.1</version>
		</dependency>
		<dependency>
			<groupId>uk.me.candle</groupId>
			<artifactId>pricing</artifactId>
			<version>1.6.0</version>
			<exclusions>
				<exclusion>
					<artifactId>xmlParserAPIs</artifactId>
					<groupId>xerces</groupId>
				</exclusion>
				<exclusion>
					<artifactId>xercesImpl</artifactId>
					<groupId>xerces</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>uk.me.candle</groupId>
			<artifactId>routing</artifactId>
			<version>1.5.0</version>
		</dependency>
		<dependency>
			<groupId>uk.me.candle</groupId>
			<artifactId>translations</artifactId>
			<version>2.2.0</version>
		</dependency>
		<dependency>
			<groupId>apple.dts.samplecode</groupId>
			<artifactId>osxadapter</artifactId>
			<version>1.1.0</version>
		</dependency>
		<dependency>
			<groupId>net.java.dev.glazedlists</groupId>
			<artifactId>glazedlists_java15</artifactId>
			<version>1.9.1</version>
		</dependency>
		<dependency>
			<groupId>org.supercsv</groupId>
			<artifactId>supercsv</artifactId>
			<version>1.52</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.1</version>
		</dependency>
		<dependency>
			<!--
				use the log4j adaptor, which sends the logging calls to
				log4j. - the artifact is slf4j-log4j12, because we
				are using the log4j 1.2.* library
			-->
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.6.1</version>
			<!--<scope>runtime</scope>-->
		</dependency>
		<dependency>
			<!--
				This contains fake commons-logging classes that
				redirect commons-logging calls to the slf4j API
			-->
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>1.6.1</version>
		</dependency>
		<dependency>
			<!--
				redirect java.util.logging (jul) calls to the slf4j API
				jul is used for logging when libraries are missing
			-->
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
			<version>1.6.1</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.16</version>
			<!--<scope>runtime</scope>-->
		</dependency>
		<dependency>
			<groupId>jfree</groupId>
			<artifactId>jfreechart</artifactId>
			<version>1.0.13</version>
		</dependency>
		<dependency>
			<groupId>com.github.lgooddatepicker</groupId>
			<artifactId>LGoodDatePicker</artifactId>
			<version>7.6.3</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.8.3</version>
		</dependency>
		<dependency>
			<groupId>enterprises.orbital.evekit</groupId>
			<artifactId>client</artifactId>
			<version>2.0.0</version>
		</dependency>
		<dependency>
		  <groupId>commons-lang</groupId>
		  <artifactId>commons-lang</artifactId>
		  <version>2.6</version>
		</dependency>
	</dependencies>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.build.sourceVersion>1.7</project.build.sourceVersion>
		<targetJdk>1.8</targetJdk>
		<arg1>-empty</arg1>
		<arg2>-empty</arg2>
	</properties>
</project>
